    spring.application.name=api-gateway
    server.port=8080
    server.address=0.0.0.0

    # Firebase
    firebase.bucket-name=upsglam.firebasestorage.app
    firebase.credentials.path=firebase/serviceAccountKey.json

    # Routing
    spring.cloud.gateway.routes[0].id=user-service
    spring.cloud.gateway.routes[0].uri=http://user-service:8081
    spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

    spring.cloud.gateway.routes[1].id=post-service
    spring.cloud.gateway.routes[1].uri=http://post-service:8082
    spring.cloud.gateway.routes[1].predicates[0]=Path=/posts/**

    spring.cloud.gateway.routes[2].id=image-service
    spring.cloud.gateway.routes[2].uri=http://image-service:8083
    spring.cloud.gateway.routes[2].predicates[0]=Path=/upload/**
    spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Content-Length
    spring.cloud.gateway.routes[2].filters[1]=PreserveHostHeader

    # CORS
    spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:3000,https://midominio.com
    spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
    spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=Authorization,Content-Type
    spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

    # Habilitar manejo de multipartes en WebFlux
    spring.codec.max-in-memory-size=20MB
    spring.webflux.multipart.max-in-memory-size=20MB
    # Prevent common-logging conflicts (optional if seen in logs)
    spring.autoconfigure.exclude=org.springframework.cloud.gateway.config.GatewayGrpcAutoConfiguration

    # Filter User Service
    user.service.url=http://user-service:8081
