version: "3.9"

services:
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    image: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - post-service
      - image-service
      - user-service
    networks:
      - upsnet

  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    image: user-service
    ports:
      - "8081:8081"
    networks:
      - upsnet

  post-service:
    build:
      context: ./backend/post-service
      dockerfile: Dockerfile
    image: post-service
    ports:
      - "8082:8082"
    networks:
      - upsnet

  image-service:
    build:
      context: ./backend/image-service
      dockerfile: Dockerfile
    image: image-service
    depends_on:
      - flask-filter-1
      - flask-filter-2
      - flask-filter-3
    ports:
      - "8083:8083"
    networks:
      - upsnet

  flask-filter-builder:
    build:
      context: ./flask_pycuda
      dockerfile: Dockerfile
    image: flask-filter-service
    entrypoint: ["echo", "image built"]
    
  flask-filter-1:
    image: flask-filter-service
    container_name: flask-filter-1
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - "5000:5000"
    networks:
      - upsnet

  flask-filter-2:
    image: flask-filter-service
    container_name: flask-filter-2
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - "5001:5000"
    networks:
      - upsnet

  flask-filter-3:
    image: flask-filter-service
    container_name: flask-filter-3
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - "5002:5000"
    networks:
      - upsnet

networks:
  upsnet:
    driver: bridge
